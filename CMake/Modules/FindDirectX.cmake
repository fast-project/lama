#
# Find DirectX
#
IF(WIN32) #DirectX is only available on Windows
	SET ( DXSDK_PATH $ENV{DXSDK_DIR} )

	IF ( NOT DEFINED DXSDK_PATH )
		FIND_PATH( DXSDK_PATH D3D11.h 
				   "C:/Program Files (x86)/Microsoft DirectX SDK (June 2010)/Include"
				   DOC "What is the path where the file D3D11.h can be found"
				 )
		#TODO Implement a fall back
	ENDIF ( NOT DEFINED DXSDK_PATH )
	
	IF ( DEFINED DXSDK_PATH )
		# Include Path
		SET( DIRECTX_INCLUDE_DIR "${DXSDK_PATH}Include" )
	
		# Library Path	
		IF ( CMAKE_SIZEOF_VOID_P EQUAL 8 )
			SET( DIRECTX_LIBRARY_DIR "${DXSDK_PATH}Lib/x64" )
		ELSEIF ( CMAKE_SIZEOF_VOID_P EQUAL 4 )
			SET( DIRECTX_LIBRARY_DIR "${DXSDK_PATH}Lib/x86" )
		ENDIF ( CMAKE_SIZEOF_VOID_P EQUAL 8 )
	ENDIF ( DEFINED DXSDK_PATH )
	
	IF ( EXISTS DIRECTX_LIBRARY_DIR )
		
		SET ( DIRECTX_LIBRARIES
			  d3d11.lib
			  d3dcompiler.lib
			  DXGI.lib
			)
			
		IF ( CMAKE_BUILD_TYPE STREQUAL "Debug" OR CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo" )
			SET ( DIRECTX_LIBRARIES
				  d3dx11d.lib
				  ${DIRECTX_LIBRARIES}
				)
		ELSE ( CMAKE_BUILD_TYPE STREQUAL "Debug" OR CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo" )
			SET ( DIRECTX_LIBRARIES
				  d3dx11.lib
				  ${DIRECTX_LIBRARIES}
				)
		ENDIF ( CMAKE_BUILD_TYPE STREQUAL "Debug" OR CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo" )
		
	ENDIF ( EXISTS DIRECTX_LIBRARY_DIR )
	
	INCLUDE(FindPackageHandleStandardArgs)
	FIND_PACKAGE_HANDLE_STANDARD_ARGS(DIRECTX DEFAULT_MSG DIRECTX_INCLUDE_DIR DIRECTX_LIBRARY_DIR DIRECTX_LIBRARIES)
	MARK_AS_ADVANCED(DIRECTX_INCLUDE_DIR DIRECTX_LIBRARY_DIR DIRECTX_LIBRARIES)
ENDIF (WIN32)



